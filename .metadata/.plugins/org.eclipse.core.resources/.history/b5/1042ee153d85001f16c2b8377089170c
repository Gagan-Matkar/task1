package com.example.Csv_extractor;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertFalse;
import static org.testng.Assert.assertNotNull;
import static org.testng.Assert.assertTrue;
import static org.testng.Assert.fail;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.testng.*;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class AppTest {

	public static Connection testConnection;

	@BeforeClass
	public static void setUp() throws SQLException {

		String h2Url = "jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1";
        testConnection = DriverManager.getConnection(h2Url, "sa", "");
		try (Statement stmt = testConnection.createStatement()) {
			String createTableSQL = "CREATE TABLE demo_acc (account_id VARCHAR(255) PRIMARY KEY, account_login VARCHAR(255), account_status VARCHAR(255), meta_type VARCHAR(255));";

			stmt.execute(createTableSQL);
		}
		App.setConnection(testConnection);

	}

	@AfterClass
	public static void exit() throws SQLException {
		if (testConnection != null && !testConnection.isClosed()) {
			testConnection.close();
		}
	}

	@Test
	public void testConnection() throws SQLException {
		assertNotNull(testConnection, "database connection should not be null");
		assertTrue(testConnection.isClosed(), "database connection should be open");
	}

	

	@Test
	public void testCloseConnection() {
		try {
			if (!testConnection.isClosed()) {
				testConnection.close();
			}
			assertTrue(testConnection.isClosed(), "Connection should be closed.");
		} catch (SQLException e) {
			fail("Exception occurred while closing the connection: " + e.getMessage());
		}
	}

	
	
	
	
//	@Test
//	public void testWriteUsersToCsv() throws IOException {
//		String fileName = "test_output.csv";
//
//		App.writeUsersToCsv(fileName);
//
//		File csvFile = new File(fileName);
//		assertTrue(csvFile.exists(), "csv file should be created");
//
//		try (BufferedReader reader = new BufferedReader(new FileReader(csvFile))) {
//			String headerLine = reader.readLine();
//			assertNotNull(headerLine, "CSV file should contain a header line.");
//			assertTrue(headerLine.contains("Account Id"), "CSV header should contain Account Id.");
//
//			String dataLine = reader.readLine();
//			assertNotNull(dataLine, "CSV file should contain data lines.");
//			assertTrue(dataLine.contains("123"), "CSV data line should contain the account ID.");
//		}
//		if (csvFile.exists()) {
//			csvFile.delete();
//		}
//
//	}
//	@Test
//	public void testSQLStatementExecution() throws SQLException {
//		App.createUser("123", "test_user", "active", "standard");
//
//		// Verify that the user was inserted correctly
//		String query = "SELECT * FROM demo_acc WHERE account_id = '123'";
//		try (Statement stmt = testConnection.createStatement(); ResultSet rs = stmt.executeQuery(query)) {
//			assertTrue(rs.next(), "ResultSet should have a result.");
//			assertEquals(rs.getString("account_login"), "test_user", "Account login should match.");
//		}
//	}
//
//	@Test
//	public void testResultSetExtraction() throws SQLException {
//		App.createUser("456", "another_user", "inactive", "admin");
//
//		// Check the ResultSet content
//		String query = "SELECT * FROM demo_acc WHERE account_id = '456'";
//		try (Statement stmt = testConnection.createStatement(); ResultSet rs = stmt.executeQuery(query)) {
//			assertTrue(rs.next(), "ResultSet should have a result.");
//			assertEquals(rs.getString("account_id"), "456", "Account ID should match.");
//			assertEquals(rs.getString("account_login"), "another_user", "Account login should match.");
//			assertEquals(rs.getString("account_status"), "inactive", "Account status should match.");
//			assertEquals(rs.getString("meta_type"), "admin", "Meta type should match.");
//		}
//	}
//
//	@Test
//	public void testDeleteUser() throws SQLException {
//		String accountId = "123";
//		App.deleteUser(accountId);
//
//		// Verify that the user was deleted correctly
//		String query = "SELECT * FROM demo_acc WHERE account_id = '" + accountId + "'";
//		try (Statement stmt = testConnection.createStatement(); ResultSet rs = stmt.executeQuery(query)) {
//			assertFalse(rs.next(), "ResultSet should be empty after deletion.");
//		}
//	}

}
